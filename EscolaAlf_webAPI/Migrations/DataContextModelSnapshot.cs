// <auto-generated />
using System;
using EscolaAlf_webAPI.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EscolaAlf_webAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("EscolaAlf_webAPI.Models.Alternativa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumeroAlternativa")
                        .HasColumnType("int");

                    b.Property<int>("QuestaoId")
                        .HasColumnType("int");

                    b.Property<string>("RespostaCorreta")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("QuestaoId");

                    b.ToTable("Alternativas");
                });

            modelBuilder.Entity("EscolaAlf_webAPI.Models.Aluno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Media")
                        .HasColumnType("float");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sexo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Situacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sobrenome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Alunos");
                });

            modelBuilder.Entity("EscolaAlf_webAPI.Models.AlunoProva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AlunoId")
                        .HasColumnType("int");

                    b.Property<double?>("Nota")
                        .HasColumnType("float");

                    b.Property<int>("ProvaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.HasIndex("ProvaId");

                    b.ToTable("AlunosProvas");
                });

            modelBuilder.Entity("EscolaAlf_webAPI.Models.Gabarito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AlternativaId")
                        .HasColumnType("int");

                    b.Property<int>("QuestaoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AlternativaId");

                    b.HasIndex("QuestaoId");

                    b.ToTable("Gabaritos");
                });

            modelBuilder.Entity("EscolaAlf_webAPI.Models.Prova", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DtProva")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Provas");
                });

            modelBuilder.Entity("EscolaAlf_webAPI.Models.Questao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Enunciado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumeroQuestao")
                        .HasColumnType("int");

                    b.Property<int>("Peso")
                        .HasColumnType("int");

                    b.Property<int>("ProvaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProvaId");

                    b.ToTable("Questoes");
                });

            modelBuilder.Entity("EscolaAlf_webAPI.Models.RespostaAluno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AlternativaId")
                        .HasColumnType("int");

                    b.Property<int>("AlunoId")
                        .HasColumnType("int");

                    b.Property<int>("QuestaoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AlternativaId");

                    b.HasIndex("AlunoId");

                    b.HasIndex("QuestaoId");

                    b.ToTable("RespostasAlunos");
                });

            modelBuilder.Entity("EscolaAlf_webAPI.Models.Alternativa", b =>
                {
                    b.HasOne("EscolaAlf_webAPI.Models.Questao", "Questao")
                        .WithMany("Alternativa")
                        .HasForeignKey("QuestaoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Questao");
                });

            modelBuilder.Entity("EscolaAlf_webAPI.Models.AlunoProva", b =>
                {
                    b.HasOne("EscolaAlf_webAPI.Models.Aluno", "Aluno")
                        .WithMany("AlunoProva")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EscolaAlf_webAPI.Models.Prova", "Prova")
                        .WithMany("AlunoProva")
                        .HasForeignKey("ProvaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Prova");
                });

            modelBuilder.Entity("EscolaAlf_webAPI.Models.Gabarito", b =>
                {
                    b.HasOne("EscolaAlf_webAPI.Models.Alternativa", "Alternativa")
                        .WithMany("Gabarito")
                        .HasForeignKey("AlternativaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EscolaAlf_webAPI.Models.Questao", "Questao")
                        .WithMany("Gabarito")
                        .HasForeignKey("QuestaoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Alternativa");

                    b.Navigation("Questao");
                });

            modelBuilder.Entity("EscolaAlf_webAPI.Models.Questao", b =>
                {
                    b.HasOne("EscolaAlf_webAPI.Models.Prova", "Prova")
                        .WithMany("Questao")
                        .HasForeignKey("ProvaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Prova");
                });

            modelBuilder.Entity("EscolaAlf_webAPI.Models.RespostaAluno", b =>
                {
                    b.HasOne("EscolaAlf_webAPI.Models.Alternativa", "Alternativa")
                        .WithMany("RespostaAluno")
                        .HasForeignKey("AlternativaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EscolaAlf_webAPI.Models.Aluno", "Aluno")
                        .WithMany("RespostaAluno")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EscolaAlf_webAPI.Models.Questao", "Questao")
                        .WithMany("RespostaAluno")
                        .HasForeignKey("QuestaoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Alternativa");

                    b.Navigation("Aluno");

                    b.Navigation("Questao");
                });

            modelBuilder.Entity("EscolaAlf_webAPI.Models.Alternativa", b =>
                {
                    b.Navigation("Gabarito");

                    b.Navigation("RespostaAluno");
                });

            modelBuilder.Entity("EscolaAlf_webAPI.Models.Aluno", b =>
                {
                    b.Navigation("AlunoProva");

                    b.Navigation("RespostaAluno");
                });

            modelBuilder.Entity("EscolaAlf_webAPI.Models.Prova", b =>
                {
                    b.Navigation("AlunoProva");

                    b.Navigation("Questao");
                });

            modelBuilder.Entity("EscolaAlf_webAPI.Models.Questao", b =>
                {
                    b.Navigation("Alternativa");

                    b.Navigation("Gabarito");

                    b.Navigation("RespostaAluno");
                });
#pragma warning restore 612, 618
        }
    }
}
